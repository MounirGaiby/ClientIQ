# Generated by Django 4.2.7 on 2025-08-20 16:51

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Company name', max_length=255)),
                ('website', models.URLField(blank=True, help_text='Company website URL')),
                ('industry', models.CharField(blank=True, help_text='Industry sector', max_length=100)),
                ('size', models.CharField(blank=True, help_text="Company size (e.g., '1-10', '11-50', '51-200', '200+')", max_length=50)),
                ('address_line1', models.CharField(blank=True, help_text='Street address', max_length=255)),
                ('address_line2', models.CharField(blank=True, help_text='Additional address information', max_length=255)),
                ('city', models.CharField(blank=True, help_text='City', max_length=100)),
                ('state', models.CharField(blank=True, help_text='State or province', max_length=100)),
                ('postal_code', models.CharField(blank=True, help_text='Postal or ZIP code', max_length=20)),
                ('country', models.CharField(blank=True, help_text='Country', max_length=100)),
                ('phone', models.CharField(blank=True, help_text='Main company phone number', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the company')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the company was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the company was last updated')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="Contact's first name", max_length=100)),
                ('last_name', models.CharField(help_text="Contact's last name", max_length=100)),
                ('email', models.EmailField(help_text='Primary email address', max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(blank=True, help_text='Primary phone number', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('job_title', models.CharField(blank=True, help_text='Job title or position', max_length=150)),
                ('contact_type', models.CharField(choices=[('prospect', 'Prospect'), ('client', 'Client'), ('partner', 'Partner')], default='prospect', help_text='Contact type classification', max_length=20)),
                ('score', models.IntegerField(default=0, help_text='Lead score (0-100) for qualification')),
                ('linkedin_url', models.URLField(blank=True, help_text='LinkedIn profile URL')),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the contact')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the contact is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the contact was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the contact was last updated')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='ContactTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Tag name', max_length=50)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code for tag display', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Contact Tag',
                'verbose_name_plural': 'Contact Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContactTagAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Contact Tag Assignment',
                'verbose_name_plural': 'Contact Tag Assignments',
            },
        ),
    ]
