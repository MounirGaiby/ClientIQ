# Generated by Django 4.2.7 on 2025-08-20 16:51

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(help_text='Email address used for authentication', max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, help_text='First name', max_length=150)),
                ('last_name', models.CharField(blank=True, help_text='Last name', max_length=150)),
                ('is_admin', models.BooleanField(default=False, help_text='Tenant admin - has all permissions in this tenant')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Contact phone number', max_length=20)),
                ('job_title', models.CharField(blank=True, help_text='Job title or position', max_length=100)),
                ('department', models.CharField(blank=True, help_text='Department or team', max_length=100)),
                ('preferences', models.JSONField(blank=True, default=dict, help_text='User-specific preferences and settings')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Tenant User',
                'verbose_name_plural': 'Tenant Users',
                'ordering': ['email'],
            },
        ),
    ]
