name: Main CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend validation
  backend:
    name: Backend (Lint + Tests + Server)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up environment
      run: |
        cd backend
        echo "SECRET_KEY=test-secret-for-ci" > .env
        echo "DEBUG=True" >> .env
        echo "DATABASE_URL=sqlite:///test.db" >> .env
        
    - name: 1. Lint Check
      run: |
        cd backend
        echo "🔍 Running Python linting..."
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo "✅ Linting passed"
        
    - name: 2. Run Tests
      run: |
        cd backend
        echo "🧪 Running working tests..."
        python run_working_tests.py
        echo "✅ Tests passed"
        
    - name: 3. Server Check
      run: |
        cd backend
        echo "🚀 Testing server configuration..."
        python manage.py check --deploy
        python manage.py migrate
        python manage.py collectstatic --noinput --clear
        echo "✅ Server configuration is valid"
    
  # Frontend validation  
  frontend:
    name: Frontend (Lint + Tests + Build)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: 1. Lint Check
      run: |
        cd frontend
        echo "🔍 Running ESLint..."
        npm run lint
        echo "✅ Linting passed"
        
    - name: 2. Run Tests
      run: |
        cd frontend
        echo "🧪 Running Jest tests..."
        npm test -- --passWithNoTests --watchAll=false
        echo "✅ Tests passed"
        
    - name: 3. Build Check
      run: |
        cd frontend
        echo "🚀 Testing build..."
        npm run build
        echo "✅ Build successful"
    
  # Gate for merging
  ci-complete:
    name: CI Complete
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - name: All checks passed
      run: |
        echo "✅ All CI checks passed!"
        echo "🐍 Backend: Lint ✅ Tests ✅ Server ✅"
        echo "⚛️ Frontend: Lint ✅ Tests ✅ Build ✅"
        echo ""
        echo "🚀 Ready for merge!"
